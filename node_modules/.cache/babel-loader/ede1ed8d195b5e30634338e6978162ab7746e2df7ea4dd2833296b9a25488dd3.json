{"ast":null,"code":"// Lembre-se: Javascript não é tipado então uma variável pode assumir vários tipos de dados\nexport const dateFormatDbToView = data => {\n  // EX: 2023-09-30T00:00:00 para 30/09/2023\n  data = data.substr(0, 10); // retorna apenas a data (2023-09-30)\n  data = data.split(\"-\"); //[2023, 09, 30]\n\n  return `${data[2]}/${data[1]}/${data[0]}`; //30/09/2023\n};\n\n// Lembre-se: Javascript não é tipado então uma variável pode assumir vários tipos de dados distintos\nexport const dateFormateDbToView = date => {\n  // EX: 2023-09-30T00:00:00 para 30/09/2023\n  date = date.substr(0, 10); // retorna apenas a data\n  date = date.split('-'); //corta a string pelo separador e retorna um array\n\n  return date = `${date[2]}/${date[1]}/${date[0]}`; //recria a string data formatada para visualização: dd/mm/yyyy\n};\n\nexport const dateFormateViewToDb = date => {\n  // EX: 30/09/2023 para 2023-09-30\n  date = date.split('/');\n  return date = `${date[2]}/${date[1]}/${date[0]}`; //recria a string data formatada para visualização: yyyy-mm-dd\n};\n\nexport const truncateDateFromDb = date => date.substr(0, 10);","map":{"version":3,"names":["dateFormatDbToView","data","substr","split","dateFormateDbToView","date","dateFormateViewToDb","truncateDateFromDb"],"sources":["C:/Users/45922978810/Desktop/2023-1S-2D/sprint-3-front/js-manha/React/eventplus/src/Utils/stringFunctions.js"],"sourcesContent":["// Lembre-se: Javascript não é tipado então uma variável pode assumir vários tipos de dados\r\nexport const dateFormatDbToView = data => {\r\n    // EX: 2023-09-30T00:00:00 para 30/09/2023\r\n    data = data.substr(0, 10);// retorna apenas a data (2023-09-30)\r\n    data = data.split(\"-\"); //[2023, 09, 30]\r\n\r\n    return `${data[2]}/${data[1]}/${data[0]}`;//30/09/2023\r\n}\r\n\r\n\r\n\r\n\r\n// Lembre-se: Javascript não é tipado então uma variável pode assumir vários tipos de dados distintos\r\nexport const dateFormateDbToView =  date => {\r\n    \r\n    // EX: 2023-09-30T00:00:00 para 30/09/2023\r\n    date = date.substr(0, 10)// retorna apenas a data\r\n    date = date.split('-')//corta a string pelo separador e retorna um array\r\n    \r\n    return date = `${date[2]}/${date[1]}/${date[0]}`//recria a string data formatada para visualização: dd/mm/yyyy\r\n}\r\nexport const dateFormateViewToDb =  date => {\r\n    \r\n     // EX: 30/09/2023 para 2023-09-30\r\n    date = date.split('/')\r\n    \r\n    return date = `${date[2]}/${date[1]}/${date[0]}`//recria a string data formatada para visualização: yyyy-mm-dd\r\n}\r\nexport const truncateDateFromDb =  date => date.substr(0,10)"],"mappings":"AAAA;AACA,OAAO,MAAMA,kBAAkB,GAAGC,IAAI,IAAI;EACtC;EACAA,IAAI,GAAGA,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EAC1BD,IAAI,GAAGA,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAExB,OAAQ,GAAEF,IAAI,CAAC,CAAC,CAAE,IAAGA,IAAI,CAAC,CAAC,CAAE,IAAGA,IAAI,CAAC,CAAC,CAAE,EAAC,CAAC;AAC9C,CAAC;;AAKD;AACA,OAAO,MAAMG,mBAAmB,GAAIC,IAAI,IAAI;EAExC;EACAA,IAAI,GAAGA,IAAI,CAACH,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACzBG,IAAI,GAAGA,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;;EAEtB,OAAOE,IAAI,GAAI,GAAEA,IAAI,CAAC,CAAC,CAAE,IAAGA,IAAI,CAAC,CAAC,CAAE,IAAGA,IAAI,CAAC,CAAC,CAAE,EAAC;AACpD,CAAC;;AACD,OAAO,MAAMC,mBAAmB,GAAID,IAAI,IAAI;EAEvC;EACDA,IAAI,GAAGA,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;EAEtB,OAAOE,IAAI,GAAI,GAAEA,IAAI,CAAC,CAAC,CAAE,IAAGA,IAAI,CAAC,CAAC,CAAE,IAAGA,IAAI,CAAC,CAAC,CAAE,EAAC;AACpD,CAAC;;AACD,OAAO,MAAME,kBAAkB,GAAIF,IAAI,IAAIA,IAAI,CAACH,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}